have_nsubj_Thats
Thats_amod_good
good_dep_a
good_advmod_really
good_advmod_really
good_dep_subject
good_cc_but
good_conj_i
i_advmod_acctully
have_xcomp_say
say_mark_to
say_ccomp_agree
agree_mark_that
agree_nsubj_i
agree_advcl_specializing
specializing_mark_with
specializing_nmod_thing
thing_case_in
thing_nummod_one
thing_appos_Beacuse
specializing_advcl_did
did_mark_if
did_nsubj_one
one_det_some
did_advmod_then
did_advcl_give
give_advmod_when
give_nsubj_he
give_advmod_well
give_dobj_%
%_nummod_100
give_advcl_making
making_mark_to
making_dobj_catagory
catagory_nmod:poss_his
catagory_dep_best
best_det_the
specializing_cc_and
specializing_conj_making
making_dobj_job
job_nmod:poss_his
specializing_dobj_best
best_det_the
Like_dep_had
had_mark_if
had_nsubj_we
had_dobj_doctor
doctor_det_a
doctor_amod_cardiac
had_advcl_asked
asked_mark_if
asked_nsubj_you
asked_dobj_him
asked_dep_tell
tell_nsubj_he
tell_advmod_well
tell_dobj_you
tell_ccomp_trying
trying_mark_that
trying_nsubj_he
trying_aux_is
trying_ccomp_best
best_mark_to
best_cop_be
best_det_the
best_cc_and
best_conj_invent
invent_mark_to
invent_dobj_methods
methods_det_a
methods_amod_new
invent_xcomp_fix
fix_mark_to
fix_dobj_heart
heart_det_the
do_advmod_so
do_nmod_end
end_case_At
end_det_the
end_nmod_road
road_case_of
road_det_the
road_dep_ambesiuos
ambesiuos_mark_if
ambesiuos_nsubj_he
ambesiuos_cop_was
do_nsubj_he
do_aux_can
do_dobj_it
saying_nsubj_all
saying_aux_am
saying_ccomp_specialize
specialize_mark_that
specialize_nsubj_better
better_nmod:poss_its
specialize_mark_to
specialize_compound:prt_in
specialize_nmod_subject
subject_case_on
one_appos_better
better_nmod:poss_its
better_acl_improve
improve_mark_to
improve_dobj_subject
subject_det_that
two_dep_better
better_nsubj_it
better_advmod_well
better_cop_be
better_nmod_him
him_case_for
better_xcomp_puzzled
puzzled_neg_not
puzzled_mark_to
puzzled_auxpass_be
make_ccomp_and
and_dobj_three
make_nsubj_it
make_advmod_well
make_xcomp_best
best_nsubj_him
best_det_the
best_nmod_subject
subject_case_in
subject_det_that
think_advmod_however
think_nsubj_i
think_dobj_good
good_det:predet_the
good_nmod:poss_its
think_advcl_have
have_mark_to
have_dobj_knowledge
knowledge_det_a
knowledge_amod_broad
have_cc_but
have_conj_foucsing
foucsing_mark_while
foucsing_nmod_major
major_case_on
major_nummod_one
engeneering_nmod_some
some_case_like
engeneering_nsubj_one
engeneering_cop_is
engeneering_det_an
engeneering_cc_but
engeneering_conj_creat
creat_nmod_time
time_case_at
time_det_the
time_amod_same
creat_nsubj_he
creat_aux_can
creat_dobj_bussnis
bussnis_amod_other
creat_compound:prt_away
creat_nmod_major
major_case_from
major_nmod:poss_his
creat_advcl_work
work_mark_like
work_nsubj_he
work_aux_could
work_nmod_stocks
stocks_case_at
stocks_det_the
work_cc_or
work_conj_open
open_dobj_store
store_det_a
store_acl_sell
sell_mark_to
sell_dobj_thing
thing_det_any
is_cc_but
is_expl_there
is_nsubj_thing
thing_det_some
thing_amod_importanat
importanat_advmod_verey
loser_advcl_beacuse
beacuse_mark_that
beacuse_nsubj_work
work_det_this
work_amod_other
work_cc_not
not_advmod_well
work_conj_effect
effect_dep_work
work_nmod:poss_his
work_amod_major
beacuse_nmod_way
way_case_in
way_det_this
loser_nsubj_he
loser_aux_will
loser_cop_be
loser_det_a
loser_nmod_subjects
subjects_case_in
subjects_det_both
is_advmod_anyway
is_nsubj_point
point_nmod:poss_my
is_ccomp_good
good_mark_that
good_nsubj_both
both_nmod_them
them_case_of
good_cop_is
better_cc_but
better_nmod_people
people_case_for
people_det_some
people_acl:relcl_good
good_nsubj_that
good_cop_is
good_nmod_others
others_case_for
better_nsubj_one
one_det_the
one_amod_other
better_cop_is
.but_nsubj_sayin
sayin_nummod_as
as_cc_and
sayin_det_the
sayin_amod_old
sayin_dep_destroy
destroy_nsubj_defers
defers_nmod_opinun
opinun_case_in
destroy_aux_will
destroy_neg_not
destroy_dobj_case
case_det_the
.but_ccomp_said
said_nsubj_i
said_dobj_mine
said_cc_and
said_conj_thank
thank_dobj_you
thank_nmod_i
i_case_for
i_det_this
i_amod_good
good_advmod_verey
i_amod_subject
subject_cc_and
subject_conj_thatsall
i_acl:relcl_have
have_xcomp_say
say_mark_to
