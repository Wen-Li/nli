Although_IN according_VBG to_TO some_DT people_NNS learning_VBG facts_NNS is_VBZ more_RBR important_JJ for_IN students_NNS than_IN understanding_VBG ideas_NNS ,_, I_PRP believe_VBP that_IN the_DT latter_JJ one_CD is_VBZ the_DT key_JJ concept_NN in_IN education_NN ._.
Understanding_VBG ideas_NNS and_CC concepts_NNS about_IN lectures_VBZ is_VBZ very_RB important_JJ in_IN a_DT student_NN 's_POS life_NN because_IN they_PRP teach_VBP the_DT reasons_NNS why_WRB something_NN happens_VBZ in_IN a_DT particular_JJ way_NN ._.
A_DT person_NN who_WP memorizes_VBZ or_CC learns_VBZ only_RB the_DT facts_NNS about_IN a_DT topic_NN can_MD answer_VB many_JJ questions_NNS about_IN it_PRP correctly_RB but_CC when_WRB he_PRP faces_VBZ with_IN a_DT situation_NN where_WRB he_PRP has_VBZ to_TO modify_VB ,_, repair_VB or_CC make_VB comments_NNS about_IN something_NN he_PRP would_MD not_RB be_VB very_RB successful_JJ ._.
Knowing_VBG facts_NNS only_RB is_VBZ not_RB enough_RB for_IN making_VBG comments_NNS on_IN a_DT topic_NN or_CC explaining_VBG the_DT reasons_NNS for_IN something_NN 's_POS happenning_NN ._.
In_IN order_NN to_TO successfully_RB do_VB these_DT one_CD has_VBZ to_TO know_VB the_DT answers_NNS for_IN the_DT questions_NNS like_IN what_WP is_VBZ going_VBG on_IN or_CC what_WP are_VBP the_DT underlying_VBG principles_NNS which_WDT can_MD be_VB learnt_VBN by_IN understanding_VBG the_DT ideas_NNS and_CC concepts_NNS about_IN the_DT topic_NN ._.
Think_VB of_IN business_NN life_NN where_WRB people_NNS are_VBP faced_VBN with_IN many_JJ difficult_JJ problems_NNS ._.
Many_JJ of_IN those_DT problems_NNS can_MD not_RB be_VB overcame_VBN by_IN not_RB knowing_VBG what_WP really_RB is_VBZ going_VBG on_RP ._.
For_IN example_NN ,_, in_IN a_DT software_NN company_NN which_WDT is_VBZ designing_VBG and_CC building_VBG a_DT highly_RB complex_JJ and_CC huge_JJ program_NN employers_NNS usually_RB have_VBP to_TO solve_VB problems_NNS related_VBN to_TO the_DT algorithms_NNS used_VBN in_IN the_DT program_NN or_CC even_RB create_VB new_JJ algorithms_NNS to_TO solve_VB a_DT problem_NN ._.
Also_RB ,_, the_DT solutions_NNS that_WDT are_VBP made_VBN must_MD be_VB not_RB only_RB successful_JJ but_CC also_RB efficient_JJ ._.
In_IN order_NN to_TO create_VB an_DT algorithm_NN which_WDT brings_VBZ a_DT successful_JJ and_CC efficient_JJ solution_NN to_TO problem_NN ,_, the_DT employers_NNS have_VBP to_TO be_VB able_JJ to_TO understand_VB the_DT problem_NN as_IN a_DT whole_JJ ,_, think_VB and_CC comment_VB on_IN it_PRP and_CC create_VB new_JJ ideas_NNS based_VBN on_IN the_DT old_JJ ones_NNS or_CC even_RB from_IN scratch_NN ._.
This_DT of_IN course_NN can_MD not_RB be_VB done_VBN by_IN just_RB knowing_VBG facts_NNS ._.
As_IN a_DT conclusion_NN in_IN order_NN for_IN a_DT person_NN to_TO be_VB successful_JJ in_IN his_PRP$ life_NN he_PRP has_VBZ to_TO learn_VB the_DT ideas_NNS and_CC concepts_NNS behind_IN a_DT topic_NN because_IN from_IN my_PRP$ point_NN of_IN view_NN ,_, this_DT is_VBZ the_DT most_RBS important_JJ thing_NN that_WDT helps_VBZ people_NNS developing_VBG new_JJ ideas_NNS or_CC explaining_VBG current_JJ ones_NNS ._.
