I_PRP do_VBP n't_RB agree_VB with_IN statement_NN ._.
Success_NN does_VBZ n't_RB depends_VBZ on_IN trying_VBG new_JJ stuff_NN ._.
It_PRP depends_VBZ on_IN how_WRB much_JJ effort_NN that_WDT person_NN put_VBD in_RP ._.
Even_RB if_IN some_DT people_NNS take_VBP risk_NN all_PDT the_DT time_NN and_CC try_VB new_JJ thing_NN ,_, if_IN they_PRP stop_VB right_RB there_RB with_IN just_RB experience_NN ,_, and_CC not_RB study_VB about_IN it_PRP ,_, that_DT 's_VBZ not_RB going_VBG to_TO help_VB with_IN their_PRP$ successful_JJ life_NN ._.
It_PRP 's_VBZ just_RB wasting_VBG of_IN time_NN ._.
As_IN I_PRP mentioned_VBD before_RB ,_, it_PRP depends_VBZ on_IN their_PRP$ effort_NN ._.
Sometimes_RB ,_, people_NNS learn_VBP from_IN taking_VBG risk_NN ,_, but_CC not_RB often_RB ._.
Plus_NN ,_, people_NNS can_MD be_VB successful_JJ through_IN discovering_VBG new_JJ things_NNS without_IN taking_VBG risk_NN ._.
People_NNS learns_VBZ from_IN past_NN ,_, including_VBG how_WRB to_TO do_VB well_RB ._.
They_PRP learned_VBD from_IN past_JJ first_RB ,_, before_IN they_PRP take_VBP risk_NN ._.
Let_VB 's_PRP say_VB I_PRP was_VBD reading_VBG art_NN history_NN books_NNS and_CC find_VB out_RP how_WRB to_TO improve_VB my_PRP$ art_NN project_NN ._.
Then_RB ,_, that_DT 's_VBZ learning_VBG from_IN past_NN ,_, not_RB learning_VBG from_IN take_VB risk_NN ._.
Learning_NNP from_IN taking_VBG risk_NN ,_, could_MD look_VB cool_JJ or_CC creative_JJ ._.
But_CC is_VBZ does_VBZ n't_RB always_RB works_VBZ that_DT way_NN ._.
If_IN someone_NN does_VBZ n't_RB have_VB any_DT common_JJ sense_NN ,_, and_CC trying_VBG to_TO find_VB out_RP new_JJ things_NNS ,_, that_IN person_NN can_MD end_VB up_RP die_VB ,_, not_RB just_RB taking_VBG risk_NN ._.
Of_IN course_NN ,_, it_PRP 's_VBZ not_RB healthy_JJ to_TO do_VB ``_`` only_RB ''_'' what_WP they_PRP already_RB know_VB how_WRB to_TO do_VB well_RB ._.
But_CC important_JJ thing_NN is_VBZ ,_, they_PRP have_VBP to_TO know_VB things_NNS in_IN the_DT book_NN that_IN people_NNS from_IN past_JJ found_VBN out_RP for_IN us_PRP before_IN they_PRP take_VBP risk_NN ._.
People_NNS call_VBP person_NN ,_, who_WP takes_VBZ risk_NN and_CC find_VB out_RP new_JJ way_NN of_IN something_NN ,_, ``_`` inventor_NN ''_'' Inventor_NNP is_VBZ only_RB one_CD form_NN of_IN success_NN ._.
To_TO be_VB successful_JJ people_NNS ,_, we_PRP do_VBP n't_RB always_RB have_VBP to_TO take_VB risk_NN ,_, but_CC concentrate_VBP what_WP they_PRP are_VBP doing_VBG ,_, and_CC trying_VBG to_TO find_VB the_DT way_NN from_IN experience_NN ,_, not_RB risk_VB ._.
(_NN Of_IN course_NN ,_, I_PRP 'm_VBP saying_VBG taking_VBG risk_NN and_CC experiencing_VBG is_VBZ totally_RB different_JJ ._. )_SYM
Everyone_NN has_VBZ their_PRP$ own_JJ talent_NN ._.
They_PRP should_MD trying_VBG to_TO find_VB their_PRP$ talent_NN before_IN they_PRP take_VBP risk_NN by_IN trying_VBG new_JJ things_NNS ._.
We_PRP have_VBP to_TO improve_VB from_IN things_NNS that_WDT already_RB say_VBP how_WRB to_TO do_VB well_RB ._.
Not_RB starting_VBG over_RP ._.
Taking_VBG risk_NN could_MD be_VB starting_VBG over_IN ._.
I_PRP disagree_VBP with_IN the_DT statement._NN ;_: ``_`` Sucessful_JJ people_NNS try_VBP new_JJ things_NNS and_CC take_VB risks_NNS rather_RB than_IN only_RB doing_VBG what_WP they_PRP already_RB know_VB how_WRB to_TO do_VB well_RB ._. ''_''
